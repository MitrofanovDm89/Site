// –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤

document.addEventListener('DOMContentLoaded', function() {
    // –î–æ–±–∞–≤–ª—è–µ–º drag&drop –∑–æ–Ω—É –≤ —Å–µ–∫—Ü–∏—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    addDragDropZone();
    
    // –£–ª—É—á—à–∞–µ–º inline –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    enhanceImageInlines();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –º–∞—Å—Å–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    addBulkUploadButton();
});

function addDragDropZone() {
    // –ò—â–µ–º —Å–µ–∫—Ü–∏—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const additionalImagesSection = document.querySelector('fieldset:has(.description:contains("Zus√§tzliche Bilder"))');
    if (!additionalImagesSection) return;
    
    // –°–æ–∑–¥–∞–µ–º drag&drop –∑–æ–Ω—É
    const dragZone = document.createElement('div');
    dragZone.className = 'drag-drop-zone';
    dragZone.innerHTML = `
        <div class="drag-text">üìÅ –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—é–¥–∞</div>
        <div class="drag-hint">–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ –ø–æ–ª—è –Ω–∏–∂–µ</div>
        <input type="file" id="bulk-file-input" multiple accept="image/*" style="display: none;">
        <button type="button" class="bulk-upload-btn" onclick="document.getElementById('bulk-file-input').click()">
            –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã
        </button>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ —Å–µ–∫—Ü–∏–∏
    const fieldset = additionalImagesSection.querySelector('fieldset');
    if (fieldset) {
        fieldset.insertBefore(dragZone, fieldset.firstChild);
    }
    
    // Drag&drop —Å–æ–±—ã—Ç–∏—è
    dragZone.addEventListener('dragover', function(e) {
        e.preventDefault();
        dragZone.classList.add('dragover');
    });
    
    dragZone.addEventListener('dragleave', function(e) {
        e.preventDefault();
        dragZone.classList.remove('dragover');
    });
    
    dragZone.addEventListener('drop', function(e) {
        e.preventDefault();
        dragZone.classList.remove('dragover');
        
        const files = e.dataTransfer.files;
        if (files.length > 0) {
            handleBulkFiles(files);
        }
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
    document.getElementById('bulk-file-input').addEventListener('change', function(e) {
        if (e.target.files.length > 0) {
            handleBulkFiles(e.target.files);
        }
    });
}

function handleBulkFiles(files) {
    const imageFiles = Array.from(files).filter(file => file.type.startsWith('image/'));
    
    if (imageFiles.length === 0) {
        alert('–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!');
        return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º inline —Ñ–æ—Ä–º—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const inlineFormset = document.querySelector('.inline-group');
    if (!inlineFormset) return;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫
    let maxOrder = 0;
    const orderInputs = inlineFormset.querySelectorAll('input[name*="order"]');
    orderInputs.forEach(input => {
        const value = parseInt(input.value) || 0;
        if (value > maxOrder) maxOrder = value;
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    imageFiles.forEach((file, index) => {
        addNewImageField(file, maxOrder + index + 1);
    });
    
    alert(`–î–æ–±–∞–≤–ª–µ–Ω–æ ${imageFiles.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π!`);
}

function addNewImageField(file, order) {
    const inlineFormset = document.querySelector('.inline-group');
    if (!inlineFormset) return;
    
    // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ"
    const addButton = inlineFormset.querySelector('.add-row a');
    if (addButton) {
        // –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        addButton.click();
        
        // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—è –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –µ–≥–æ
        setTimeout(() => {
            const newRow = inlineFormset.querySelector('.inline-related:last-child');
            if (newRow) {
                // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                const fileInput = newRow.querySelector('input[type="file"]');
                if (fileInput) {
                    // –°–æ–∑–¥–∞–µ–º DataTransfer –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–∞–π–ª–∞
                    const dt = new DataTransfer();
                    dt.items.add(file);
                    fileInput.files = dt.files;
                    
                    // –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏–µ change
                    fileInput.dispatchEvent(new Event('change', { bubbles: true }));
                }
                
                // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ—Ä—è–¥–æ–∫
                const orderInput = newRow.querySelector('input[name*="order"]');
                if (orderInput) {
                    orderInput.value = order;
                }
                
                // –ó–∞–ø–æ–ª–Ω—è–µ–º alt —Ç–µ–∫—Å—Ç
                const altInput = newRow.querySelector('input[name*="alt_text"]');
                if (altInput) {
                    altInput.value = file.name.replace(/\.[^/.]+$/, ""); // –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
                }
            }
        }, 100);
    }
}

function enhanceImageInlines() {
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const inlineGroups = document.querySelectorAll('.inline-group');
    inlineGroups.forEach(group => {
        const count = group.querySelectorAll('.inline-related').length;
        const header = group.querySelector('.inline-related h3');
        if (header) {
            const counter = document.createElement('span');
            counter.className = 'image-counter';
            counter.textContent = `${count} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`;
            header.appendChild(counter);
        }
    });
    
    // –£–ª—É—á—à–∞–µ–º –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const imageInputs = document.querySelectorAll('input[type="file"]');
    imageInputs.forEach(input => {
        input.addEventListener('change', function(e) {
            if (e.target.files.length > 0) {
                const file = e.target.files[0];
                const reader = new FileReader();
                
                reader.onload = function(e) {
                    const container = input.closest('.inline-related');
                    if (container) {
                        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø—Ä–µ–≤—å—é
                        const oldPreview = container.querySelector('.image-preview');
                        if (oldPreview) oldPreview.remove();
                        
                        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø—Ä–µ–≤—å—é
                        const preview = document.createElement('div');
                        preview.className = 'image-preview';
                        preview.innerHTML = `
                            <img src="${e.target.result}" style="max-width: 100px; max-height: 100px; border-radius: 4px;">
                        `;
                        
                        // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –ø–æ–ª—è —Ñ–∞–π–ª–∞
                        input.parentNode.insertBefore(preview, input.nextSibling);
                    }
                };
                
                reader.readAsDataURL(file);
            }
        });
    });
}

function addBulkUploadButton() {
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –º–∞—Å—Å–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const pageHeader = document.querySelector('.page-header');
    if (pageHeader) {
        const bulkButton = document.createElement('button');
        bulkButton.type = 'button';
        bulkButton.className = 'bulk-upload-btn';
        bulkButton.textContent = 'üìÅ –ú–∞—Å—Å–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π';
        bulkButton.onclick = showBulkUploadModal;
        
        pageHeader.appendChild(bulkButton);
    }
}

function showBulkUploadModal() {
    // –ü—Ä–æ—Å—Ç–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    const modal = document.createElement('div');
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        z-index: 9999;
        display: flex;
        align-items: center;
        justify-content: center;
    `;
    
    modal.innerHTML = `
        <div style="background: white; padding: 20px; border-radius: 8px; max-width: 500px;">
            <h3>–ú–∞—Å—Å–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</h3>
            <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:</p>
            <code style="background: #f5f5f5; padding: 10px; display: block; margin: 10px 0;">
                python manage.py bulk_upload_images [ID_–ø—Ä–æ–¥—É–∫—Ç–∞] [–ø—É—Ç—å_–∫_–ø–∞–ø–∫–µ]
            </code>
            <p><strong>–ü—Ä–∏–º–µ—Ä:</strong></p>
            <code style="background: #f5f5f5; padding: 10px; display: block; margin: 10px 0;">
                python manage.py bulk_upload_images 1 "C:\\Images\\Product1"
            </code>
            <button onclick="this.closest('.modal').remove()" style="margin-top: 15px;">–ó–∞–∫—Ä—ã—Ç—å</button>
        </div>
    `;
    
    modal.className = 'modal';
    document.body.appendChild(modal);
}
